name: Vulnerability Scanning & Subdomain Detection

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Manual trigger
  schedule:
    # Optimized monthly schedule with minimal scans
    - cron: '15 2 1 * *'   # 1st of the month at 2:15 AM UTC
    - cron: '45 3 5 * *'   # 5th of the month at 3:45 AM UTC
    - cron: '30 4 10 * *'  # 10th of the month at 4:30 AM UTC
    - cron: '20 5 15 * *'  # 15th of the month at 5:20 AM UTC
    - cron: '55 6 20 * *'  # 20th of the month at 6:55 AM UTC
    - cron: '35 7 25 * *'  # 25th of the month at 7:35 AM UTC
    - cron: '10 8 30 * *'  # 30th of the month at 8:10 AM UTC

jobs:
  vulnerability-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Install Sublist3r
      - name: Install Sublist3r dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git python3 python3-pip
          git clone https://github.com/aboul3la/Sublist3r.git
          cd Sublist3r
          pip3 install -r requirements.txt

      # Use Sublist3r to detect subdomains
      - name: Detect subdomains
        run: |
          set -e
          mkdir -p subdomain_output old_subdomains
          new_subdomains_detected=false

          # Read domains from the correct path
          while IFS= read -r domain; do
            echo "Finding subdomains for $domain"
            output_file="subdomain_output/${domain//https:\/\//}_subdomains.txt"
            python3 Sublist3r/sublist3r.py -d "$domain" -o "$output_file"

            # Check if output file was created
            if [ -f "$output_file" ]; then
              echo "Subdomain output file created: $output_file"
              # Check for new subdomains
              if [ -f "old_subdomains/${domain//https:\/\//}_old_subdomains.txt" ]; then
                if ! diff "$output_file" "old_subdomains/${domain//https:\/\//}_old_subdomains.txt"; then
                  echo "New subdomains detected for $domain"
                  new_subdomains_detected=true
                fi
              else
                echo "First run for $domain, no old subdomains to compare."
                new_subdomains_detected=true
              fi

              # Save current subdomains for the next run
              cp "$output_file" "old_subdomains/${domain//https:\/\//}_old_subdomains.txt"
            else
              echo "No subdomains found for $domain. Skipping comparison."
            fi
          done < .github/workflows/domains.txt  # Ensure this points to the correct location

          # Set output variable for new subdomains detection
          echo "new_subdomains_detected=${new_subdomains_detected}" >> $GITHUB_ENV

      # Run OWASP ZAP Scan only if new subdomains were detected
      - name: Run OWASP ZAP Scan
        if: env.new_subdomains_detected == 'true'  # Run ZAP only if new subdomains detected
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: 'https://mtn.com'  # Update with the actual target domain
          rules_file_name: '.github/zap/rules.tsv'  # Optional: Custom rules can be defined here

      - name: Upload ZAP report
        if: env.new_subdomains_detected == 'true'  # Upload report only if new subdomains detected
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: owasp-zap-report.html  # Default report name generated by the ZAP action

      # Install Nikto
      - name: Install Nikto
        run: sudo apt-get update && sudo apt-get install -y nikto

      # Run Nikto Scan only if new subdomains were detected
      - name: Run Nikto Scan
        if: env.new_subdomains_detected == 'true'  # Run Nikto only if new subdomains detected
        run: |
          mkdir -p nikto-output
          nikto -h https://mtn.com -output nikto-output/nikto_report.txt  # Update with the actual target domain

      - name: Upload Nikto report
        if: env.new_subdomains_detected == 'true'  # Upload report only if new subdomains detected
        uses: actions/upload-artifact@v4
        with:
          name: nikto-report
          path: nikto-output/nikto_report.txt

      - name: Display Scan Summary
        run: |
          echo "OWASP ZAP and Nikto Scans Completed"
